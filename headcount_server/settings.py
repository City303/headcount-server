"""
Django settings for headcount_api project.

Generated by 'django-admin startproject' using Django 2.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import django_heroku
import dj_database_url
import dotenv
import datetime


''' 
Application definition 
'''
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR      = os.path.dirname(os.path.dirname(os.path.abspath(__file__))) 
ALLOWED_HOSTS = ['0.0.0.0', '127.0.0.1', 'localhost', 'headcount-server.herokuapp.com']

# Get database url from db.sqlite3 (local) if .env is present,
# or Heroku Postgres (online) if .env is not present
#
# Other environment variables can be added, too
dotenv_file = os.path.join(BASE_DIR, ".env")
if os.path.isfile(dotenv_file):
    dotenv.load_dotenv(dotenv_file)

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'z96qavo-q#^p1lmbna6y1xo7ll!dyj#=bjy&o!ygibbolu^u%b'      

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True 

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Third party packages
    'rest_framework',
    'corsheaders',

    # Our packages
    'headcount_db',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # Third party
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'headcount_server.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'headcount_server.wsgi.application'

CORS_ORIGIN_ALLOW_ALL = True



'''
REST API and authentication
'''
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ]
}

JWT_AUTH = {
    'JWT_EXPIRATION_DELTA': datetime.timedelta(hours=1),
    'JWT_ALLOW_REFRESH': True,
}



''' 
Database 
'''
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {

    }
}

# Use DATABASE_URL based on Heroku (online) or .env file (local)
DATABASES['default'] = dj_database_url.config(conn_max_age=600)



''' 
Password validation 
https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators
'''
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]



''' 
Internationalization
https://docs.djangoproject.com/en/2.2/topics/i18n/
'''
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'America/Chicago'
USE_I18N  = True
USE_L10N  = True
USE_TZ    = False



''' 
Static files (CSS, JavaScript, Images)
https://docs.djangoproject.com/en/2.2/howto/static-files/
'''
PROJECT_ROOT = os.path.join(os.path.abspath(__file__))
STATIC_ROOT  = os.path.join(PROJECT_ROOT, 'static')
STATIC_URL   = '/static/'

# Extra lookup directories for collectstatic to find static files
STATICFILES_DIRS = (
    os.path.join(PROJECT_ROOT, 'staticfiles'),
)

#  Add configuration for static files storage using whitenoise
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'



'''
Media files
'''
MEDIA_ROOT = os.path.join(PROJECT_ROOT, 'media')
MEDIA_URL  = '/media/'



'''
Miscellaneous
'''
django_heroku.settings(locals())
del DATABASES['default']['OPTIONS']['sslmode'] # SSL workaround when working locally

APPEND_SLASH = False
